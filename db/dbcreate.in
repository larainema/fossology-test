#!/bin/bash
# FOSSology dbcreate script
# Copyright (C) 2008 Hewlett-Packard Development Company, L.P.
#
# This script checks to see if the the fossology db exists and if not
# then creates it.

echo "*** Setting up the FOSSology database ***"

DBCONF="{$SYSCONFDIR}/fossology/Db.conf"

# At some point this is where we could dynamically set the db password

# first check that postgres is running
su postgres -c 'echo \\q|psql'
if [ $? != 0 ]; then
   echo "ERROR: postgresql isn't running"
   exit 1
fi

# then check to see if the db already exists
su postgres -c 'psql -l' |grep -q fossology
if [ $? = 0 ]; then
   echo "NOTE: fossology database already exists, not creating"
   echo "*** Checking database connectivity ***"
   # check that we can talk to the db
   if [ -x {$LIBEXECDIR}/dbcheck ]; then
      {$LIBEXECDIR}/dbcheck
   else
      echo "ERROR: no {$LIBEXECDIR}/dbcheck, have you installed?"
      exit 1
   fi
   if [ $? != 0 ]; then
      echo "ERROR: unable to connect to database, please check $DBCONF"
      exit 1
   else
      echo "NOTE: Connect succeeded, database is working."
      echo "*** Checking for plpgsql support ***"
      su postgres -c 'createlang -l fossology' |grep -q plpgsql
      if [ $? = 0 ]; then
         echo "NOTE: plpgsql already exists in fossology database, good"
      else
         echo "NOTE: plpgsql doesn't exist, adding"
         su postgres -c 'createlang plpgsql fossology'
         if [ $? != 0 ]; then
            echo "ERROR: failed to add plpgsql to fossology database"
         fi
      fi
   fi
else
   echo "*** Initializing database ***"
   su postgres -c "psql < {$LIBEXECDIR}/fossologyinit.sql"
   if [ $? != 0 ] ; then
      echo "ERROR: Database failed during configuration.\n"
      exit 1
   fi
fi
