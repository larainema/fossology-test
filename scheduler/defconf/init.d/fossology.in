#! /bin/sh
# Init script for the {$PROJECT} scheduler.
# Copyright (C) 2008 Hewlett-Packard Development Company, L.P.
#
# Based on the example skeleton:
#	Written by Miquel van Smoorenburg <miquels@cistron.nl>.
#	Modified for Debian by Ian Murdock <imurdock@gnu.ai.mit.edu>.
#
### BEGIN INIT INFO
# Provides:          {$PROJECT}
# Required-Start:    $network $local_fs $remote_fs $syslog $named
# Required-Stop:     $network $local_fs $remote_fs $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: FOSSology scheduler daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON_V1={$LIBEXECDIR}/fossology-scheduler
DAEMON_V2={$LIBEXECDIR}/fo_scheduler
WATCHDOG={$LIBEXECDIR}/fo_watchdog
NAME=scheduler
DESC="FOSSology job scheduler"

test -x $DAEMON || exit 0
test -x $WATCHDOG || exit 0

# default is to run, can be overridden in defaults
ENABLED=1

# Include scheduler defaults if available
SCHEDULEROPT_V1="-d -R"
SCHEDULEROPT_V2="--daemon --reset --log={$LOGDIR}/fossology_2.log"
if [ -f {$SYSCONFDIR}/default/fossology ] ; then
    # This can override SCHEDULEROPT_V1 or SCHEDULEROPT_V2.
    # Be sure to keep "-d" for daemon mode
    . {$SYSCONFDIR}/default/fossology
fi

# Quit quietly, if $ENABLED is 0.
test "$ENABLED" != "0" || exit 0

set -e

case "$1" in
  start)
    echo -n "Starting $DESC: "
    $DAEMON_V1 $SCHEDULEROPT_V1
    $DAEMON_V2 $SCHEDULEROPT_V2
    echo "$NAME."
    $WATCHDOG
    ;;
  stop)
    echo -n "Stopping $DESC: "
    # we don't really care about the exit code as long as it's stopped
    $WATCHDOG -k
    $DAEMON_V1 -k || true
    $DAEMON_V2 --kill || true
    echo "$NAME."
    ;;
  reload)
    # the new scheduler can reload its config files, the old one cannot
    # a change to config for the old scheduler requires a restart
    kill -1 `ps aux | awk '/fo_scheduler/ && !/awk/ {print $2}'`
    ;;
  force-reload)
    #
    #   If the "reload" option is implemented, move the "force-reload"
    #   option to the "reload" entry above. If not, "force-reload" is
    #   just the same as "restart" except that it does nothing if the
    #   daemon isn't already running.
    # check wether $DAEMON is running. If so, restart
    $WATCHDOG -k
    $DAEMON_V1 -k
    $DAEMON_V1 $SCHEDULEROPT_V1
    $DAEMON_V2 --kill
    $DAEMON_V2 $SCHEDULEROPT_V2
    $WATCHDOG
    ;;
  restart)
    echo -n "Restarting $DESC: "
    $WATCHDOG -k
    $DAEMON_V1 -k
    $DAEMON_V1 $SCHEDULEROPT_V1
    $DAEMON_V2 --kill
    $DAEMON_V2 $SCHEDULEROPT_V2
    echo "$NAME."
    $WATCHDOG
    ;;
  *)
    N={$INITDIR}/init.d/$NAME
    echo "Usage: $N {start|stop|restart|reload|force-reload}" >&2
    #echo "Usage: $N \{start|stop|restart|force-reload\}" >&2
    exit 1
    ;;
esac

exit 0
