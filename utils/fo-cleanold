#!/bin/sh
# fo-cleanold - a utility to clean up old fossology installs
# Copyright (C) 2008-2012 Hewlett-Packard Development Company, L.P.
#
# This utility is designed to clean fossology installs off a system. By
# default it
# * deletes all program files from both old and new installs
# * saves a copy of all config files, deleting the old (pre 1.0.0) config
#    files and leaving new ones in place
# * leaves the database alone
# * leaves the repository alone
# So by default it is safe to run on a (properly backed up) system you
# are upgrading the fossology install on. However using additional flags
# you can also delete the new config files, the database (assuming postgresql
# is localhost), and the repo (in it's default location, including
# files/gold/everything) which is useful if you want to completely start
# over or for testing.
# See the help text for options.

## Options parsing and setup
# parse options
OPTS=`getopt -o h --long delete-agent,delete-config,delete-database,delete-repository,delete-user,delete-everything,help -n 'fo-cleanold' -- "$@"`

if [ $? != 0 ]; then
   echo "ERROR: Bad option specified."
   OPTS="--help"
fi

eval set -- "$OPTS"

while true; do
case "$1" in
      --delete-agent) AGENT_NAME=$3; RMAGENT=1; shift;;
      --delete-config) RMCONF=1; shift;;
      --delete-database) RMDB=1; shift;;
      --delete-repository) RMREPO=1; shift;;
      --delete-user) RMUSER=1; shift;;
      --delete-everything) EVERYTHING=1; shift;;
      -h|--help)
         echo "Usage: fo-cleanold [options]";
         echo " By default fo-cleanold does not delete any data, but you can specify"
         echo " additional options that WILL DELETE DATA, please use with caution."
         echo "  --delete-agent      : delete agent"
         echo "  --delete-config     : delete configuration files"
         echo "  --delete-database   : delete database"
         echo "  --delete-repository : delete repository"
         echo "  --delete-user       : delete user and group"
         echo "  --delete-everything : delete everything"
         echo "  -h or --help        : this help text"
         exit;;
      --) shift; break;;
      *) echo "Error: option $1 not recognised"; exit 1;;
   esac
done

if [ $EVERYTHING ]; then
   echo "*** Deleting everything ***"
   RMAGENT=1
   AGENT_NAME=all
   RMCONF=1
   RMDB=1
   RMREPO=1
   RMUSER=1
   RMOTHERS=1
fi


# This must run as root.
if [ `id -u` != "0" ] ; then
   echo "ERROR: fo-cleanold must run as root."
   echo "Aborting."
   exit 1
fi


# config files 
CONFFILES="
/etc/cron.d/fossology
/etc/init.d/fossology
/usr/local/etc/fossology/
"

FILES="
/usr/local/lib/fossology/
/usr/local/bin/cp2foss
/usr/local/bin/departition
/usr/local/bin/fossjobs
/usr/local/bin/fosslic
/usr/local/include/libfossagent.h
/usr/local/share/man/man1/cp2foss.1
/usr/local/share/man/man1/fossjobs.1
/usr/local/share/man/man1/fosslic.1
"

AGENTDIRS="
/usr/local/etc/fossology/mods-enabled/
/usr/local/share/fossology/
"

## configfile
if [ $RMCONF ]; then
echo "*** Deleling config files ***"
  for file in $CONFFILES; do
    if [ -f $file ] || [ -d $file ]; then
      rm -rf $file
    fi
  done
fi

if [ $RMOTHERS ]; then
echo "*** Deleting other old fossology files ***"
  for file in $FILES; do
    if [ -f "$file" -o -L "$file" ]; then
      rm -f $file
    fi
  done
fi

## Agent, if AGENT_NAME is all, delete all agents
if [ $RMAGENT ]; then
  echo "*** Deleting agent $AGENT_NAME ***"
  AGENT_NAME=`echo $AGENT_NAME  | tr '[A-Z]' '[a-z]'`
  for dir in $AGENTDIRS; do
    if [ $AGENT_NAME = 'all' ]; then
      rm -rf $dir
    else
      rm -rf "$dir/$AGENT_NAME"
    fi
  done
fi

## Database
if [ $RMDB ]; then
   echo "*** Deleting DB ***"
   # first check that the db is running
   su postgres -c 'echo \\q|psql'
   if [ $? != 0 ]; then
      echo "ERROR: postgresql isn't running, not deleting database"
   else
      # and next that the db exists
      su postgres -c 'psql -l' |grep -q fossology
      if [ $? = 0 ]; then
         echo "*** Deleting database ***"
         # stop all users of the fossology db
         pkill -f -u postgres fossy || true
         su postgres -c 'echo "drop database fossology"|psql'
         if [ $? != 0 ]; then
            echo "ERROR: failed to delete database"
            exit 1
         fi
      else
         echo "NOTE: fossology database does not exist, not deleting"
      fi
   fi
fi

## Repository
if [ $RMREPO ]; then
   echo "*** Deleting repository ***"
   if [ -d /srv/fossology/repository ]; then
      rm -rf /srv/fossology
      if [ $? != 0 ]; then
         echo "ERROR: failed to delete repository"
         exit 1
      fi
   else
      echo "NOTE: repository does not exist, so not deleting"
   fi
fi

## User and Group
if [ $RMUSER ]; then
   echo "*** Deleting user and group ***"
   if grep -q "^fossy:" /etc/passwd; then
      userdel -r fossy
      if [ $? != 0 ]; then
         echo "ERROR: failed to delete user"
         exit 1
      fi
   fi

   if grep -q "^fossy:" /etc/group; then
      groupdel fossy
      if [ $? != 0 ]; then
         echo "ERROR: failed to delete group"
         exit 1
      fi
   fi
fi
