<?xml version="1.0" encoding="UTF-8" ?>

<testsuites timeout="10">

  <!--
  @brief Every test suite needs its own copy of the scheduler
  
  The startup will start a scheduler using the configuration and log file
  specified by the test suite. It will then wait 1 second.
  
  The cleanup will use the cli to send a stop command to the scheduler. This
  will cause the scheduler to close if it is still running.
   -->
  <setup>
    <concurrently command="{scheduler}" params="--config={config} --log={log} --verbose=952"/>
    <loadConf directory="{config}"/>
    <sleep duration="1"/>
  </setup>
  <cleanup>
    <sequential command="{cli}" params="--config={config} -D"/>
  </cleanup>
  
  <!--
  @brief Tests that the scheduler's stop command is working correctly
  
  This starts a scheduler and waits for it to stop running the startup tests,
  it then sends a stop command. Since the scheduler doesn't have any currently
  running agents, this will cause the scheduler to stop running immediately.
  -->
  <testsuite name="Test Just Stop">
    <definitions pwd       = "{$pwd}"
                 config    = "{pwd}/scheduler/agent_tests/agents"
                 log       = "{config}/fossology.log"
                 agentdir  = "{pwd}/scheduler/agent"
                 scheduler = "{agentdir}/fo_scheduler"
                 cli       = "{agentdir}/fo_cli"/>
    <setup>
      <sequential command="{cli}" params="--config={config} -S" retval="0"
                  result="scheduler:{pids:0} revision:{BUILD:SVN_REV} daemon:0 jobs:0 log:{log} port:{FOSSOLOGY:port} verbose:952"/>
    </setup>
  
    <!-- Stop the scheduler and make sure it isn't running anymore -->
    <test name="scheduler stop">
      <sequential command="{cli}" params="--config={config} -s" retval="0"/>
      <sleep duration="5"/>
      <sequential command="{cli}" params="--config={config} -S" retval="255"/>
    </test>
  </testsuite>

  <!--
  @brief Tests that the test agents are handled correctly
  
  This sets the scheduler to start on the agents found in the agent_tests/agents
  directory. These should test all of the possible fail cases and several of the
  success cases for the agents.
  
  @note  If a type of failing agent that is not currently tests is found, it
         should be added as a .c file under the agent_tests/agents directory
  -->
  <testsuite name="Test TestAgents">
    <definitions pwd       = "{$pwd}"
                 config    = "{pwd}/scheduler/agent_tests/agents"
                 log       = "{config}/fossology.log"
                 agentdir  = "{pwd}/scheduler/agent"
                 scheduler = "{agentdir}/fo_scheduler"
                 cli       = "{agentdir}/fo_cli"/>
    <setup>
      <sequential command="{cli}" params="--config={config} -S" retval="0"
                  result="scheduler:{pids:0} revision:{BUILD:SVN_REV} daemon:0 jobs:0 log:{log} port:{FOSSOLOGY:port} verbose:952"/>
    </setup>
    
    <!-- Test that the correct agents passed the startup test -->
    <test name = "agents">
      <sequential command="{cli}" params="--config={config} -a" retval="0"
                  result="db_connect multi_connect no_update simple"/>
    </test>
    
    <!-- Test that the scheduler has the correct status -->
    <test name = "status">
      <sequential command="{cli}" params="--config={config} -S" retval="0"
                  result="scheduler:{pids:0} revision:{BUILD:SVN_REV} daemon:0 jobs:0 log:{log} port:{FOSSOLOGY:port} verbose:952"/>
    </test>
    
    <!-- Test that the host load is correct for no running agents -->
    <test name = "load">
      <sequential command="{cli}" params="--config={config} -l" retval="0"
                  result="host:localhost address:localhost max:10 running:0"/>
    </test>
  </testsuite>
  
  <!--
  @brief Tests the graceful and non-graceful scheduler shutdowns
  
  Start a scheduler with the test agents but do not wait for it to stop running
  the startup tests. Send the scheduler a stop command and make sure that it is
  still running. Then send the scheduler a die command and make sure that it is
  not running.
  -->
  <testsuite name="Test Stop/Die">
    <definitions pwd       = "{$pwd}"
                 config    = "{pwd}/scheduler/agent_tests/agents"
                 log       = "{config}/fossology.log"
                 agentdir  = "{pwd}/scheduler/agent"
                 scheduler = "{agentdir}/fo_scheduler"
                 cli       = "{agentdir}/fo_cli"/>
    
    <!-- Send a stop command to the scheduler, it should keep running -->
    <test name="scheduler stop">
      <sequential command="{cli}" params="--config={config} -s" retval="0"/>
      <sleep duration="5"/>
      <sequential command="{cli}" params="--config={config} -S" retval="0"/>
    </test>

    <!-- Send a die command to the scheduler, it should stop running -->
    <test name="scheduler die">
      <sequential command="{cli}" params="--config={config} -D" retval="0"/>
      <sleep duration="5"/>
      <sequential command="{cli}" params="--config={config} -S" retval="255"/>
    </test>
  </testsuite>
  
  <!--
  @brief Tests the scheduler with the standard agents
  
  This will basically mimics the "TestAgents" test but uses the actual agents
  instead of the test agents. This will start the scheduler and wait for startup
  tests to finish. Unlike with the test agents, all the agents should pass this
  step.
  -->
  <testsuite name="Test RealAgents">
    <definitions pwd       = "{$pwd}"
                 config    = "{$echo $FOSSOLOGY_TESTCONFIG}"
                 log       = "{config}/fossology.log"
                 agentdir  = "{pwd}/scheduler/agent"
                 scheduler = "{agentdir}/fo_scheduler"
                 cli       = "{agentdir}/fo_cli"/>
    <setup>
      <sequential command="{cli}" params="--config={config} -S" retval="0"
                  result="scheduler:{pids:0} revision:{BUILD:SVN_REV} daemon:0 jobs:0 log:{log} port:{FOSSOLOGY:port} verbose:952"/>
    </setup>
    
    <!-- Test that the correct agents passed the startup test -->
    <test name = "agents">
      <sequential command="{cli}" params="--config={config} -a" retval="0"
                  result="adj2nest buckets copyright delagent mimetype nomos pkgagent ununpack wget_agent"/>
    </test>
    
    <!-- Test that the scheduler has the correct status -->
    <test name = "status">
      <sequential command="{cli}" params="--config={config} -S" retval="0"
                  result="scheduler:{pids:0} revision:{BUILD:SVN_REV} daemon:0 jobs:0 log:{log} port:{FOSSOLOGY:port} verbose:952"/>
    </test>
    
    <!-- Test that the host load is correct for no running agents -->
    <test name = "load">
      <sequential command="{cli}" params="--config={config} -l" retval="0"
                  result="host:localhost address:localhost max:10 running:0"/>
    </test>
  </testsuite>
  
  <!-- 
  @brief Uploads a file to the e
  
  
  -->
  <testsuite name="Test SimpleUpload">
    <definitions pwd       = "{$pwd}"
                 config    = "{$echo $FOSSOLOGY_TESTCONFIG}"
                 log       = "{config}/fossology.log"
                 agentdir  = "{pwd}/scheduler/agent"
                 scheduler = "{agentdir}/fo_scheduler"
                 cp2foss   = "{pwd}/cli/cp2foss"
                 fossjobs  = "{pwd}/cli/fossjobs"
                 cli       = "{agentdir}/fo_cli"
                 user      = "fossy"
                 pass      = "fossy"/>
     <setup>
       <upload file="{pwd}/testing/dataFiles/TestData/archives/3files.tar.bz2"/>
       <schedule upload="{upload_pk:0}"/>
       <sequential command="{cli}" params="--config={config} -S" retval="0"
                  result="scheduler:{pids:0} revision:{BUILD:SVN_REV} daemon:0 jobs:0 log:{log} port:{FOSSOLOGY:port} verbose:952"/>
     </setup>
  
  </testsuite>

</testsuites>





