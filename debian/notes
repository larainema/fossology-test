Notes on the Debian packaging of FOSSology
==========================================
1.) The debian/ directory is kept in upstream SVN, but it is excluded
from upstream release tarballs in order to prevent the messy
situation of having to patch and merge this directory.

2.) How to build packages. First prepare using one of the following
 A.) svn export the whole tree and then have the most recent upstream
   tarball unpacked as fossology-<version>.orig
 B.) * unpack the upstream tarball once for your working directory
     * unpack it again as fossology-<version>.orig for the upstream
     * export the debian directory and put it in the working dir
 C.) use an existing debian source package
Then hack away on the working directory and use normal methods for
building the package (e.g. "debuild -rfakeroot").

3.) Currently fossology-common and fossology-agents* depend on each other.
 A.) fossology-agents depends on fossology-common because it needs the
  fo-postinstall script and the utilities that it uses.
 B.) fossology-common depends on fossology-agents because the web ui
  uses License.bsam as part of the "one shot" license analysis. I hope
  in the future this functionality delivered as a plugin and can go
  back in the fossology-agents package.

Because of this loop dpkg will need to break it. Debian Policy 7.2 says

  "If one of the packages in the loop has no postinst script, then the
  cycle will be broken at that package, so as to ensure that all
  postinst scripts run with the dependencies properly configured if
  this is possible."

Because fossology-common doesn't have a postinst, it will be
installed/upgraded first which solves A, and B does not occur until
web ui runtime, so this works.

4.) Things need to happen in a certain order:
  * All packages call fo-postinstall in the postinst scripts, and that
      is provided by fossology-common
  * The agents need to be installed before the scheduler can be started
  * The agents need the database to exist before they run their postinstall
  * It doesn't matter when the web ui is installed, but it may not
      function while other things are being installed
 So therefore
  * fossology-db needs to installed before fossology-agents*, but only if
      this is a single machine install
  * fossology-common needs to be installed before fossology-agents* 
  * fossology-agents need to be installed before fossology-scheduler
 So that that results in the following Depends:
  * fossology Depends on fossology-scheduler and fossology-web
  * fossology-scheduler Depends on fossology-agents-single | fossology-agents
  * fossology-agents-single Depends on fossology-db and fossology-common
  * fossology-agents Depends on fossology-common
  * fossology-agents-single Conflicts with fossology-agents
 Other implications:
  * fossology-web can't depends on fossology-agents*, because then in the
     single case it means the scheduler won't start last.
  * in the multi case, on the machine running the scheduler you need to
     install fossology-agents before fossology-scheduler, and that is
     what the instructions in README.Debian tell you to do.

5.) Eventually I hope to split out the agents packages so you can pick
only the ones you want, but it doesn't make sense yet. When I do then
fossology-agents and fossology-agents-single could Recommends them.
